{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototypes","PropTypes","string","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.21a1b040.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button\r\n            className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn  btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n              </div> \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototypes={\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string,\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText= \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    return (\r\n        <>\r\n     <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n         <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#606060':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n         <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n         <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n         <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleClearClick}>Clear Text</button>\r\n         <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleCopy}>Copy Text</button>\r\n         <button className=\"btn btn-primary mx-2 mb-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n     </div>\r\n\r\n     <div className=\"container my-3\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n         <h1>Your Text Summary</h1>\r\n         <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n         <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n         <h2>Preview</h2>\r\n         <p>{text.length>0?text:\"Enter something in the textbox to preview\"}</p>\r\n     </div>\r\n       </> \r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport \"./App.css\";\nimport Alert from './components/Alert';\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n//   // Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#454545';\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Text Handler\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}